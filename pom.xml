<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<name>admin_interface</name>
  	<description>Интерфейс администратора для конфигурации ATC</description>
	
	<groupId>atc.gui.admin</groupId>
	<artifactId>admin-console</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	
	<properties>
	    <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <resources.source.dir>${basedir}/src/main/resources</resources.source.dir>
        <webapp.source.dir>${basedir}/src/main/webapp</webapp.source.dir>

        <maven.build.timestamp.format>yyyy-MM-dd</maven.build.timestamp.format>
		<!--<packname>-${project.version}-${maven.build.timestamp}</packname>-->

        <jetty.docroot>${project.build.directory}/jetty</jetty.docroot>
        <help.build.files>${project.build.directory}/buildhelp</help.build.files>
		<!--<zk.version>7.0.2</zk.version>-->
        <zk.version>8.0.4-Eval</zk.version>
        <!--<zk.version>8.0.4.1</zk.version>-->
		<!--<zkmax.version>3.6.3</zkmax.version>-->
        <zkmax.version>8.0.4-Eval</zkmax.version>
        <!--<zkex.version>3.6.3</zkex.version>-->
        <zkex.version>8.0.4-Eval</zkex.version>

		<zkspring.version>3.2.0</zkspring.version>
		<zkspring.security.version>3.2.0</zkspring.security.version>

		<commons-io>2.5</commons-io>
        <dom4j.version>1.6.1</dom4j.version>
		<jsr330.version>1</jsr330.version>
		<hsqldb.version>2.3.4</hsqldb.version>
		<javaee-api.version>7.0</javaee-api.version>

        <javax.persistence-api.version>1.0.2</javax.persistence-api.version>
        <hibernate-validator.version>5.4.0.Final</hibernate-validator.version>

        <gson.version>2.2.4</gson.version>

		<spring.version>3.2.18.RELEASE</spring.version> <!--3.2.18.RELEASE-->
        <!--<aspectj.version>1.7.4</aspectj.version>-->
        <spring.security.version>3.1.2.RELEASE</spring.security.version> <!--3.2.10.RELEASE-->
		<spring.beans.version>3.2.18.RELEASE</spring.beans.version> <!--3.2.18.RELEASE-->


        <!--<aspectj.version>1.7.4</aspectj.version>-->
        <!--<postgres.version>9.2-1003-jdbc4</postgres.version>-->
        <pgjdbc-ng.version>0.6</pgjdbc-ng.version>
        <xmlapis.version>2.0.2</xmlapis.version>
        <itext.version>4.2.2</itext.version>

        <javax.servlet-api.version>3.1.0</javax.servlet-api.version>

        <poi.version>3.10-FINAL</poi.version>
        <jasperreports.version>6.4.0</jasperreports.version>

        <!--<version>3.10-FINAL</version>-->

        <slf4j.version>1.7.22</slf4j.version>
        <logback.version>1.1.9</logback.version>
        <!-- ??? -->
        <lilith.net.appender.version>8.0.0</lilith.net.appender.version>
		<!--<spring.agent>2.5.6</spring.agent>-->
        <freemarker.version>2.3.23</freemarker.version>

    </properties>

	<repositories>
		<repository>
			<id>ZK CE</id>
			<name>ZK CE Repository</name>
			<url>http://mavensync.zkoss.org/maven2</url>
		</repository>
        <!-- ZK EE trial 60 days version -->
        <!-- use spec. version name for evolution libraries <version>7.0.2-Eval</version> -->
		<repository>
			<id>ZK EE</id>
			<name>ZK Evaluation Repository</name>
			<url>http://mavensync.zkoss.org/eval</url>
		</repository>
	    <repository>
           <id>repo2_maven_org</id>
           <url>http://repo2.maven.org/maven2</url>
        </repository>
        <!-- ZK Community open source modules -->
		<repository>
		  <id>google-maven-snapshot-repository</id>
		  <name>Google Maven Snapshot Repository</name>
		  <url>https://oss.sonatype.org/content/repositories/google-snapshots/</url>
		  <snapshots>
		    <enabled>true</enabled>
		  </snapshots>
		</repository>
	</repositories>

    <!-- Different ZK projects archetypes -->
	<pluginRepositories>
		<pluginRepository>
			<id>zkmaven</id>
			<name>ZK Maven Plugin Repository</name>
			<url>http://mavensync.zkoss.org/maven2/</url>
		</pluginRepository>
	</pluginRepositories>
	
	<dependencies>
        <!-- use groovy in zscript sections -->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>2.4.7</version>
		</dependency>

		<!-- ace editor -->
		<dependency>
		    <groupId>com.alibaba.zk.zul</groupId>
		    <artifactId>acebox</artifactId>
		    <version>0.0.1-SNAPSHOT</version>
		    <scope>system</scope>
		    <systemPath>${basedir}/libs/acebox-0.0.1-SNAPSHOT.jar</systemPath>
		</dependency>

		<!-- external sound playing component -->
		<dependency>
		    <groupId>org.zkoss.addon</groupId>
		    <artifactId>soundmanager</artifactId>
		    <version>0.8.0</version>
		    <scope>system</scope>
		    <systemPath>${basedir}/libs/soundmanager-0.8.0.jar</systemPath>
		</dependency>

        <!-- ckeditor -->
	 	<dependency>
			<groupId>org.zkoss.zkforge</groupId>
			<artifactId>ckez</artifactId>
			<version>3.6.0.0</version>
		</dependency>

		<dependency>
		  <groupId>org.zkoss.addons</groupId>
		  <artifactId>zk-bootstrap</artifactId>
		  <version>1.0.0</version>
		</dependency>
		
		<!-- zkoss -->
		<dependency>
			<groupId>org.zkoss.zk</groupId>
			<artifactId>zk</artifactId>
			<version>${zk.version}</version>
		</dependency>
		<dependency>
			<groupId>org.zkoss.zk</groupId>
			<artifactId>zul</artifactId>
			<version>${zk.version}</version>
		</dependency>
		<dependency>
			<groupId>org.zkoss.zk</groupId>
			<artifactId>zkmax</artifactId>
			<version>${zkmax.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
				<exclusion>
					<groupId>com.google.code.gson</groupId>
					<artifactId>gson</artifactId>
				</exclusion>
            </exclusions>
        </dependency>
		<dependency>
			<groupId>org.zkoss.zk</groupId>
			<artifactId>zkex</artifactId>
			<version>${zkex.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>dom4j</artifactId>
					<groupId>dom4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.zkoss.zk</groupId>
			<artifactId>zkbind</artifactId>
			<version>${zk.version}</version>
		</dependency>
		<dependency>
			<groupId>org.zkoss.common</groupId>
			<artifactId>zcommon</artifactId>
			<version>${zk.version}</version>
			 <exclusions>
		        <exclusion>
		            <groupId>org.slf4j</groupId>
		            <artifactId>slf4j-jdk14</artifactId>
		        </exclusion>
		    </exclusions>
		</dependency>
		<dependency>
			<groupId>org.zkoss.common</groupId>
			<artifactId>zweb</artifactId>
			<version>${zk.version}</version>
		</dependency>
		<dependency>
			<groupId>org.zkoss.maven</groupId>
			<artifactId>yuicompressor-maven-plugin-zk</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-utils</artifactId>
			<version>3.0.17</version>
		</dependency>
		<!-- Zk spring core adapter -->
		<dependency>
			<groupId>org.zkoss.zk</groupId>
			<artifactId>zkspring-core</artifactId>
			<version>${zkspring.version}</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>google-collections</artifactId>
					<groupId>com.google.collections</groupId>
				</exclusion>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
                <!---->
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
            </exclusions>
		</dependency>
		<dependency>
			<groupId>org.zkoss.zk</groupId>
			<artifactId>zkplus</artifactId>
			<version>${zk.version}</version>
			<scope>compile</scope>
		</dependency>
		<!-- Zk spring security adapter -->
		<dependency>
		    <groupId>org.zkoss.zk</groupId>
		    <artifactId>zkspring-security</artifactId>
		    <version>${zkspring.security.version}</version>
		    <exclusions>
		    	<exclusion>
		    		<artifactId>commons-logging</artifactId>
		    		<groupId>commons-logging</groupId>
		    	</exclusion>
                <!---->
                <exclusion>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-config</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-taglibs</artifactId>
                </exclusion>
            </exclusions>
		</dependency>

		<!-- Zk used other libraries -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io}</version>
		</dependency>

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<!-- Addition libraries -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.12.2</version>
			<scope>provided</scope>
		</dependency>
		<!-- Postgres forked driver with SqlData support -->
		<dependency>
			<groupId>com.impossibl.pgjdbc-ng</groupId>
			<artifactId>pgjdbc-ng</artifactId>
			<version>${pgjdbc-ng.version}</version>
		</dependency>
        <!-- Spring Security -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
    	<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
			<exclusions>
            	<exclusion>
            		<artifactId>spring-context</artifactId>
            		<groupId>org.springframework</groupId>
            	</exclusion>
            </exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring.security.version}</version>
    	</dependency>
    	<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-acl</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
        <!-- used by zkspring-security -->
        <!-- Spring Web -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Spring AOP -->
		<dependency>  
		     <groupId>org.springframework</groupId>  
		     <artifactId>spring-aspects</artifactId>  
		     <version>${spring.version}</version>  
		</dependency>
		<!-- Spring Jdbc template -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring context -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-context-support</artifactId>
		    <version>${spring.version}</version>
		</dependency>
		<!-- Spring beans -->
		<dependency>
			<artifactId>spring-beans</artifactId>
			<groupId>org.springframework</groupId>
			<version>${spring.beans.version}</version>
		</dependency>
        <!-- Bean Validation API JSR303 -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>
        <!-- Used by hibernate validator -->
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>${javax.persistence-api.version}</version>
        </dependency>
        <!-- Hibernate JSR 303 implementation -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.1.0.Final</version>
        </dependency>
        <!-- Needed to support validation -->
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>2.2.4</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>javax.el</artifactId>
            <version>2.2.4</version>
        </dependency>
        <!-- Logging using slf4j(as logging facade) and logback(as logger solution) -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- intercept jcl(commons-loging - used by spring by default  ) -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- intercept log4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
		<!-- All logging target modules -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
        </dependency>
       	<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
        <!-- jul-to-slf4j bridge(SLF4JBridgeHandler) -->
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>jul-to-slf4j</artifactId>
		    <version>${slf4j.version}</version>
	    </dependency>
        <!-- logback spring integration to get additional functionality -->
        <!-- allows to use SLF4J's java.util.logging bridge(init it on start) -->
		<dependency>
			<groupId>org.logback-extensions</groupId>
			<artifactId>logback-ext-spring</artifactId>
			<version>0.1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${jsr330.version}</version>
		</dependency>
		<dependency>
		    <groupId>javax</groupId>
		    <artifactId>javaee-api</artifactId>
		    <version>${javaee-api.version}</version>
		    <scope>provided</scope>
		</dependency>		       
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>${javax.servlet-api.version}</version>
		    <scope>provided</scope>
		</dependency>		       
        <!-- Freemarker used to parse login page -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>${freemarker.version}</version>
        </dependency>		        
		<dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.5</version>
        </dependency>
        <!-- Db connection pool -->
        <dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.5.2</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>
		<!-- lilith ui net logging -->
        <!-- Special logback appender used instead of SocketAppender to send events to Lilith UI by net -->
		<dependency>
			<groupId>de.huxhorn.lilith</groupId>
			<artifactId>de.huxhorn.lilith.logback.appender.multiplex-classic</artifactId>
			<version>${lilith.net.appender.version}</version>
		</dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
            <scope>compile</scope>
        </dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
            <scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${poi.version}</version>
		</dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.6.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.6.0</version>
        </dependency>
        <dependency>
            <groupId>org.jfree</groupId>
            <artifactId>jfreechart</artifactId>
            <version>1.0.19</version>
        </dependency>
	</dependencies>
	
	<build>
       <!-- name used in ROOT.xml to set application on root path startable -->
	   <finalName>${project.artifactId}</finalName>
       <!--<finalName>${project.artifactId}-${project.version}-${maven.build.timestamp}</finalName>-->
	   <!-- inject luquiBase settings -->
	   <filters>
	       <filter>${resources.source.dir}/db/config/${build.profile.id}/jdbc.properties</filter>
           <filter>${resources.source.dir}/application.properties</filter>
	   </filters>
	   <resources>
           <!-- files used by maven plugins, not in runtime -->
           <resource>
               <directory>${resources.source.dir}</directory>
               <targetPath>${help.build.files}</targetPath>
               <filtering>true</filtering>
               <includes>
                   <include>sqltool.rc</include>
                   <include>liquibase.properties</include>
               </includes>
           </resource>
           <!-- jetty specific -->
           <resource>
               <directory>${webapp.source.dir}/WEB-INF</directory>
               <targetPath>${jetty.docroot}/WEB-INF</targetPath>
               <filtering>true</filtering>
               <includes>
                   <include>zk.xml</include>
               </includes>
           </resource>
		   <resource>
			   <directory>${resources.source.dir}/spring</directory>
			   <targetPath>${jetty.docroot}/WEB-INF/classes/spring</targetPath>
			   <filtering>true</filtering>
			   <includes>
				   <include>app-context.xml</include>
			   </includes>
		   </resource>
           <!-- general -->
           <resource>
               <directory>${webapp.source.dir}/WEB-INF</directory>
               <targetPath>${project.build.directory}/${project.build.finalName}/WEB-INF</targetPath>
               <filtering>true</filtering>
               <includes>
                   <include>zk.xml</include>
               </includes>
           </resource>
           <resource>
               <directory>${resources.source.dir}/db/config/${build.profile.id}</directory>
               <filtering>false</filtering>
           </resource>
		   <resource>
				<directory>${resources.source.dir}</directory>
				<filtering>true</filtering>
				<includes>
					<include>*.properties</include>
					<include>*.xml</include>
                    <include>spring/*.xml</include>
				</includes>
               <excludes>
                    <exclude>sqltool.rc</exclude>
                    <exclude>liquibase.properties</exclude>
               </excludes>
		   </resource>
           <resource>
               <directory>${resources.source.dir}</directory>
               <filtering>false</filtering>
               <includes>
                   <include>reports/**</include>
                   <include>locales/**</include>
                   <include>fonts/**</include>
                   <include>org/**</include>
               </includes>
           </resource>
	   </resources>
	   <plugins>
			<!-- Run with Jetty -->
			<!-- 
			    by default jetty-run-plugin looks for:
			        resources in /src/main/webapp
			        classes in /target/classes
			        web.xml in /src/main/webapp/WEB-INF/
			 -->    
			 <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.4.0.v20161208</version>
				<configuration>
                    <webAppConfig>
                        <contextPath>/</contextPath>
                        <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
                            <resourcesAsCSV>${project.build.directory}/jetty,${project.basedir}/src/main/webapp</resourcesAsCSV>
                        </baseResource>
                        <baseAppFirst>false</baseAppFirst>
                    </webAppConfig>
					<!-- applied after webApp element -->
					<contextXml>${resources.source.dir}/jetty/jetty-context.xml</contextXml>
					<scanIntervalSeconds>3</scanIntervalSeconds>
                    <!--<jettyXml>${project.basedir}/src/main/webapp/WEB-INF/jetty-jmx.xml</jettyXml>-->
                    <!-- used to operate on forked jetty instance -->
					<stopKey>foo</stopKey>
					<stopPort>9999</stopPort>
                    <daemon>true</daemon>
                    <stopWait>3</stopWait>
					 <!--<reload>manual</reload>-->
				</configuration>
                  <dependencies>
                      <!--Utility classes for Jetty-->
                      <dependency>
                          <groupId>org.eclipse.jetty</groupId>
                          <artifactId>jetty-util</artifactId>
                          <version>9.4.2.v20170220</version>
                      </dependency>
                      <dependency>
                          <groupId>org.slf4j</groupId>
                          <artifactId>jcl-over-slf4j</artifactId>
                          <version>${slf4j.version}</version>
                      </dependency>
                      <dependency>
                          <groupId>ch.qos.logback</groupId>
                          <artifactId>logback-core</artifactId>
                          <version>${logback.version}</version>
                      </dependency>
                      <dependency>
                          <groupId>ch.qos.logback</groupId>
                          <artifactId>logback-classic</artifactId>
                          <version>${logback.version}</version>
                      </dependency>
                      <!-- integration with servlet container to log http communication -->
                      <dependency>
                          <groupId>ch.qos.logback</groupId>
                          <artifactId>logback-access</artifactId>
                          <version>${logback.version}</version>
                      </dependency>
					  <!--This file is part of Lilith. It contains the access encoder.-->
					  <!--
                      <dependency>
                          <groupId>de.huxhorn.lilith</groupId>
                          <artifactId>de.huxhorn.lilith.logback.encoder.access</artifactId>
                          <version>0.9.43</version>
                      </dependency>
                      -->
                  </dependencies>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
           </plugin>
           <!-- Build Db -->
	       <plugin>
			   <groupId>org.liquibase</groupId>
			   <artifactId>liquibase-maven-plugin</artifactId>
			   <version>3.1.1</version>
			   <configuration>
				  <propertyFile>${help.build.files}/liquibase.properties</propertyFile>
				  <promptOnNonLocalDatabase>true</promptOnNonLocalDatabase>
				  <logging>severe</logging>
				  <!-- <rollbackTag>v.1.0-start</rollbackTag> -->	
				  <!-- <rollbackCount>1</rollbackCount> -->
			   </configuration>
			   <executions>
				 <execution>
	 			   <!-- <phase>process-resources</phase> --> 
				   <phase>none</phase>
				   <goals>
					 <!-- <goal>rollback</goal> -->
					 <!-- <goal>rollbackSQL</goal> -->
					 <goal>update</goal>
					 <!-- <goal>dropAll</goal> -->
				   </goals>
				 </execution>
			   </executions>
			</plugin>            
			<!-- Compile java -->
            <plugin>
            	<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <debug>true</debug>
        			<debuglevel>lines,vars,source</debuglevel>
                </configuration>
            </plugin>
            <!-- Copy resources -->
            <plugin>
				 <groupId>org.apache.maven.plugins</groupId>
				 <artifactId>maven-resources-plugin</artifactId>
				 <version>3.0.2</version>
				 <configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<nonFilteredFileExtensions>
      					<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
    				</nonFilteredFileExtensions>
                    <escapeWindowsPaths>false</escapeWindowsPaths>
				 </configuration>
			</plugin>
			<!-- Build war(only packing war, not used by jetty plugin test start) -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
				<version>3.0.0</version>
				<configuration>
                    <!--
					<filters>
						<filter>${resources.source.dir}/db/config/${build.profile.id}/jdbc.properties</filter>
					</filters>
                    -->
                    <filters>
                        <filter>${resources.source.dir}/application.properties</filter>
                    </filters>
					<webResources>
                        <resource>
                            <directory>${webapp.source.dir}/WEB-INF</directory>
                            <targetPath>WEB-INF</targetPath>
                            <filtering>true</filtering>
                            <includes>
                                <include>zk.xml</include>
                            </includes>
                        </resource>
						<resource>
							<filtering>false</filtering>
							<directory>${basedir}</directory>
							<targetPath>WEB-INF/lib</targetPath>
							<includes>
								<include>libs/acebox-0.0.1-SNAPSHOT.jar</include>
								<include>libs/soundmanager-0.8.0.jar</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>dev</id>
			<!-- Dev profile is active by default -->
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<build.profile.id>dev</build.profile.id>
			</properties>
 			<dependencies>
				<dependency>
					<groupId>org.hsqldb</groupId>
					<artifactId>hsqldb</artifactId>
					<version>${hsqldb.version}</version>
				</dependency>			
				<dependency>
					<groupId>org.hsqldb</groupId>
					<artifactId>sqltool</artifactId>
					<version>${hsqldb.version}</version>
				</dependency>					    
		    </dependencies>
			<build>
				<plugins>
				    <!-- used to read values from properties file inside maven -->
		            <plugin>
					    <groupId>org.codehaus.mojo</groupId>
					    <artifactId>properties-maven-plugin</artifactId>
					    <version>1.0-alpha-2</version>
					    <executions>
					        <execution>
					            <phase>process-resources</phase>
					            <goals>
					                <goal>read-project-properties</goal>
					            </goals>
					            <configuration>
					                <files>
					                    <file>${resources.source.dir}/db/config/${build.profile.id}/jdbc.properties</file>
					                </files>
					            </configuration>
					        </execution>
				    	</executions>
					</plugin>
					<!-- stop hsqldb mem server -->
					<!-- exec:java -->
					<plugin>
					    <groupId>org.codehaus.mojo</groupId>
					    <artifactId>exec-maven-plugin</artifactId>
					    <version>1.2.1</version>
					    <executions>
					        <execution>
					        	<!-- <phase>post-integration-test</phase> -->
					        	<phase>none</phase>
					            <goals>
					                <goal>java</goal>
					            </goals>
					        </execution>
					    </executions>
					    <configuration>
					        <mainClass>org.hsqldb.cmdline.SqlTool</mainClass>
					        <arguments>
					            <argument>--rcfile=${help.build.files}/sqltool.rc</argument>
					            <argument>--sql=shutdown;</argument>
					            <argument>${jdbc.host}-${jdbc.username}</argument>
					        </arguments>
					    </configuration>
					    <dependencies>
							<dependency>
								<groupId>org.hsqldb</groupId>
								<artifactId>sqltool</artifactId>
								<version>${hsqldb.version}</version>
							</dependency>
							<dependency>
								<groupId>org.hsqldb</groupId>
								<artifactId>hsqldb</artifactId>
								<version>${hsqldb.version}</version>
							</dependency>				    
					    </dependencies>
					</plugin> 
					<!-- start hsqldb mem server -->
					<!-- antrun:run -->
					 <plugin>
				        <groupId>org.apache.maven.plugins</groupId>
				        <artifactId>maven-antrun-plugin</artifactId>
				        <version>1.7</version>
				        <dependencies>
				        </dependencies>
				        <executions>
				          <execution>
				          	<id>default-cli</id>
				            <!-- <phase>process-sources</phase> -->
				            <phase>none</phase>
				            <configuration>
				              <target>
				                <property name="runtime_classpath" refid="maven.runtime.classpath" />
				                <java classname="org.hsqldb.Server" fork="yes" spawn="yes">
				                  <arg line="-database.0 mem:memdb -dbname.0 voip" />
				                  <classpath>
				                    	<pathelement path="${runtime_classpath}" />
				                  </classpath>
				                </java>
				              </target>
				            </configuration>
				            <goals>
				              	<goal>run</goal>
				            </goals>
				          </execution>
				        </executions>
				      </plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<build.profile.id>prod</build.profile.id>
			</properties>
			<dependencies>
 				<dependency>
					<groupId>com.impossibl.pgjdbc-ng</groupId>
					<artifactId>pgjdbc-ng</artifactId>
					<version>${pgjdbc-ng.version}</version>
				</dependency>
                <dependency>
                    <groupId>net.sf.jasperreports</groupId>
                    <artifactId>jasperreports</artifactId>
                    <version>${jasperreports.version}</version>
                </dependency>
			</dependencies>
		</profile>
	</profiles>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>xml-apis</groupId>
				<artifactId>xml-apis</artifactId>
				<version>${xmlapis.version}</version>
			</dependency>
			<dependency>
				<groupId>com.lowagie</groupId>
				<artifactId>itext</artifactId>
				<version>${itext.version}</version>
			</dependency>
			<dependency>
				<artifactId>dom4j</artifactId>
				<groupId>dom4j</groupId>
				<version>${dom4j.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.jasperreports</groupId>
				<artifactId>jasperreports</artifactId>
				<version>${jasperreports.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
</project>